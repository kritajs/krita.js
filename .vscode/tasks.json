{
  "tasks": [
    {
      "type": "cppbuild",
      "label": "Build loader.dll",
      "command": "g++",
      "args": [
        "-fdiagnostics-color=always",
        // Disable warnings
        "-w",
        // Qt includes
        "-I\"${workspaceFolder}/deps/qtbase-5.15.2-mingw81_64/include\"",
        "-I\"${workspaceFolder}/deps/qtbase-5.15.2-mingw81_64/include/QtCore\"",
        "-I\"${workspaceFolder}/deps/qtbase-5.15.2-mingw81_64/include/QtWidgets\"",
        // Custom libkis header includes
        "-I\"${workspaceFolder}/src/loader/libkis\"",
        // Specify the directory containing the dynamic libraries we want to link to
        "-L\"C:/Program Files/Krita (x64)/bin\"",
        // Dynamic libraries to link to
        "-llibkritalibkis",
        "-lQt5Core",
        // Flag to create a dynamic library (for example, a .dll) instead of an executable
        "-shared",
        // Outputs temporary build files such as object files (.o). Useful for checking name mangling.
        "-save-temps=obj",
        // Specify output directory
        "-o",
        "${workspaceFolder}/src/plugin/kritajs/bin/loader.dll",
        // The input source file(s)
        "${workspaceFolder}/src/loader/loader.cpp"
      ],
      "options": {
        "cwd": "${fileDirname}"
      },
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "Build the loader DLL used to initialize krita.js"
    },
    {
      "type": "shell",
      "label": "Inspect opened object (.o) file",
      "command": "llvm-nm",
      "args": ["${file}"],
      "problemMatcher": ["$gcc"],
      "detail": "Inspect opened object (.o) file. Useful for checking how symbol names are mangled by g++."
    },
    {
      "type": "shell",
      "label": "Run bindgen",
      "command": "./ENV/Scripts/python",
      "args": [
        "./src/bindgen.py",
        // Path to libkis
        "${workspaceFolder}/deps/krita/libs/libkis",
        // Where to output the generated files
        "-o",
        "${workspaceFolder}/src/loader/libkis"
      ],
      "options": {
        "cwd": "${workspaceFolder}/tools/bindgen"
      },
      "problemMatcher": ["$gcc"],
      "detail": "Generate custom libkis headers, JS bindings and TS declaration files."
    }
  ],
  "version": "2.0.0"
}
